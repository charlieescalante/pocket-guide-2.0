import streamlit as st
from geopy.geocoders import Nominatim
from openai import OpenAI
from streamlit_geolocation import streamlit_geolocation

# Initialize services
geolocator = Nominatim(user_agent=st.secrets["USER_AGENT"], timeout=10)
client = OpenAI(api_key=st.secrets["OPENAI_API_Key"])

# App title and intro
st.title("PocketGuide with Reverse Geocoding")
st.info(
    "**Note**: The content presented here is generated by AI, and any spoken narration uses an AI-generated voice."
)

# Initialize session states
if "tour_started" not in st.session_state:
    st.session_state.tour_started = False
if "location" not in st.session_state:
    st.session_state.location = None
if "address" not in st.session_state:
    st.session_state.address = None
if "messages" not in st.session_state:
    st.session_state.messages = [
        {
            "role": "system",
            "content": (
                "You are a tour guide. You give insights into people's surroundings "
                "using their address. It will be a 1-sided tour; you won't receive questions "
                "from the user. You will simply speak about the area as though you've lived "
                "there your whole life, providing rich detail and history."
            ),
        }
    ]

# "Start Tour" button
if st.button("Start Tour"):
    st.session_state.tour_started = True

# Geolocation retrieval
if st.session_state.tour_started:
    location = streamlit_geolocation()
    if location:
        st.success("Geolocation Retrieved Successfully!")
        st.session_state["location"] = location
        st.write(f"**Latitude:** {location['latitude']}")
        st.write(f"**Longitude:** {location['longitude']}")
    else:
        st.warning("Click the button to fetch your geolocation.")

# "Reverse Geocode" button
if st.button("Reverse Geocode Address") and st.session_state.get("location"):
    location = st.session_state["location"]
    lat, lon = location["latitude"], location["longitude"]
    try:
        reverse_location = geolocator.reverse(f"{lat}, {lon}")
        if reverse_location:
            address = reverse_location.raw["display_name"]
            st.write(f"**Resolved Address:** {address}")
            st.session_state["address"] = address
        else:
            st.warning("No address found for the given coordinates.")
    except Exception as e:
        st.error(f"Error during reverse geocoding: {e}")

# "Generate Tour Narration" button
if st.button("Generate Tour Narration") and st.session_state.get("address"):
    address = st.session_state["address"]
    user_message = f"I am currently at: {address}."
    st.session_state.messages.append({"role": "user", "content": user_message})

    with st.spinner("Generating your tour guide narration..."):
        try:
            chatresponse = client.chat.completions.create(
                model="chatgpt-4o-latest",
                messages=st.session_state.messages,
                temperature=1,
                n=1,
            )
            tour_guide_text = chatresponse.choices[0].message.content
            st.session_state.messages.append({"role": "assistant", "content": tour_guide_text})
            st.write("---")
            st.markdown("#### Your PocketGuide says:")
            st.write(tour_guide_text)
        except Exception as e:
            st.error(f"Error during AI processing: {e}")