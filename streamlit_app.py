import streamlit as st
from openai import OpenAI
from streamlit_geolocation import streamlit_geolocation
from audio_recorder_streamlit import audio_recorder
import os
import base64

# Initialize OpenAI client
client = OpenAI(api_key=st.secrets['OPENAI_API_Key'])

# Title and Information
st.title("PocketGuide with Voice")
st.info(
    "**Note**: The content presented here is generated by AI, and any spoken narration uses an AI-generated voice."
)

# Initialize session states
if "tour_started" not in st.session_state:
    st.session_state.tour_started = False

if "messages" not in st.session_state:
    st.session_state.messages = [
        {
            "role": "system",
            "content": (
                "You are a tour guide. Provide detailed insights into a user's surroundings "
                "based on GPS coordinates. Speak as though you've lived there your entire life, "
                "with rich detail and history."
            ),
        }
    ]

# Function: Text-to-Speech
def text_to_speech(input_text):
    response = client.audio.speech.create(
        model="tts-1",
        voice="nova",
        input=input_text
    )
    audio_file_path = "temp_audio.mp3"
    with open(audio_file_path, "wb") as f:
        response.stream_to_file(audio_file_path)
    return audio_file_path

# Function: Autoplay Audio
def autoplay_audio(file_path):
    with open(file_path, "rb") as f:
        data = f.read()
    b64 = base64.b64encode(data).decode("utf-8")
    md = f"""
    <audio autoplay>
    <source src="data:audio/mp3;base64,{b64}" type="audio/mp3">
    </audio>
    """
    st.markdown(md, unsafe_allow_html=True)

# Start Tour Button
if st.button("Start Tour"):
    st.session_state.tour_started = True

# Process Tour
if st.session_state.tour_started:
    location = streamlit_geolocation()

    if location:
        st.success("Geolocation Retrieved Successfully!")
        lat = location["latitude"]
        lon = location["longitude"]

        st.write(f"**Latitude:** {lat}")
        st.write(f"**Longitude:** {lon}")

        # Prepare user input for OpenAI
        user_message = f"My current GPS coordinates are: Latitude {lat}, Longitude {lon}."
        st.session_state.messages.append({"role": "user", "content": user_message})

        # Call OpenAI ChatCompletion
        with st.spinner("Generating your tour guide narration..."):
            chatresponse = client.chat.completions.create(
                model="gpt-4",
                messages=st.session_state.messages,
                temperature=1,
                n=1,
            )

        # Extract and display the assistantâ€™s response
        tour_guide_text = chatresponse.choices[0].message.content
        st.session_state.messages.append({"role": "assistant", "content": tour_guide_text})

        st.write("---")
        st.markdown("#### Your PocketGuide says:")
        st.write(tour_guide_text)

        # Generate and play audio
        with st.spinner("Generating audio..."):
            audio_file = text_to_speech(tour_guide_text)
            autoplay_audio(audio_file)
            os.remove(audio_file)

    else:
        st.warning("Click the button to fetch your geolocation.")
